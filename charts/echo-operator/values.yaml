## Provide a name in place of `echo-operator`
nameOverride: ""

additionalLabels: {}

## Number of old replicasets to retain
revisionHistoryLimit: 3

## String to fully override `"echo-operator.fullname"`
fullnameOverride: ""

image:
  repository: ghcr.io/pando85/echo-operator
  tag: 0.0.0
  pullPolicy: IfNotPresent

imagePullSecrets: []

replicas: 1

rbac:
  create: true

## Service account to use.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  create: true
  name: ""
  annotations: {}

logging:
  ## Log level defined by RUST_LOG environment variable. Example: info,kube=debug,echo-operator=debug
  ## Ref: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/index.html#filtering-events-with-environment-variables
  level: "info"

## podSecurityContext holds pod-level security attributes and common container settings.
## This defaults to non root user with uid 65534 and gid 65534. *v1.PodSecurityContext  false
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  fsGroup: 65534
  runAsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

## Container ports
containerPorts:
  ## Metrics container port
  metrics: 8080

## Readiness probe
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
readinessProbe:
  ## Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 0
  ## Number of seconds after which the [probe] times out
  timeoutSeconds: 1
  ## How often (in seconds) to perform the [probe]
  periodSeconds: 10
  ## Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  ## Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 3

## Liveness probe
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  ## Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 0
  ## Number of seconds after which the [probe] times out
  timeoutSeconds: 1
  ## How often (in seconds) to perform the [probe]
  periodSeconds: 10
  ## Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  ## Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 3

## Configure the gRPC opentelemetry push url
tracing:
  ## Use the telemetry built image and inject OPENTELEMETRY_ENDPOINT_URL
  enabled: false
  ## collector service name
  service: tempo
  ## namespace of the collector
  namespace: monitoring
  ## collector port for OTLP gRPC
  port: 4317

env: []

envFrom: []
# - configMapRef:
#     name: config-map-name
# - secretRef:
#     name: secret-name

## Specify postStart and preStop lifecycle hooks
lifecycle: {}

deploymentAnnotations: {}

podAnnotations: {}

resources: {}

## If specified, the pod's topology spread constraints.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints: []
# - maxSkew: 1
#   topologyKey: topology.kubernetes.io/zone
#   whenUnsatisfiable: DoNotSchedule
#   labelSelector:
#     matchLabels:
#       app.kubernetes.io/name: echo-operator

## Define which Nodes the Pods are scheduled on.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

## Assign custom affinity rules to the prometheus operator
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/e2e-az-name
  #         operator: In
  #         values:
  #         - e2e-az1
  #         - e2e-az2

## Tolerations for use with node taints
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

dnsConfig: {}
  # nameservers:
  #   - 1.2.3.4
  # searches:
  #   - ns1.svc.cluster-domain.example
  #   - my.dns.search.suffix
  # options:
  #   - name: ndots
  #     value: "2"
  #   - name: edns0

metrics:
  enabled: false
  ## Service configuration
  service:
    ## Service annotations
    annotations: {}
    ## Service labels
    additionalLabels: {}
    ## Service type
    type: ClusterIP
    ## Service port
    port: 8080
    ## Service port name
    portName: metrics
  serviceMonitor:
    ## Enable a prometheus ServiceMonitor
    enabled: false
    ## Prometheus ServiceMonitor interval
    interval: 30s
    ## Prometheus ServiceMonitor scrapeTimeout. If empty, Prometheus uses the global scrape timeout
    ## unless it is less than the target's scrape interval value in which the latter is used.
    scrapeTimeout: ""
    ## Prometheus [RelabelConfigs] to apply to samples before scraping
    relabelings: []
    ## Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
    metricRelabelings: []
    ## Prometheus ServiceMonitor namespace
    namespace: "" # "monitoring"
    ## Prometheus ServiceMonitor labels
    additionalLabels: {}
    ## Prometheus ServiceMonitor annotations
    annotations: {}
    ## Prometheus ServiceMonitor scheme
    scheme: http
