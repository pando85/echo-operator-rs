nameOverride: "echo-operator-test"

additionalLabels:
  app: echo-operator-test

revisionHistoryLimit: 10

fullnameOverride: "echo-operator-test-full-name"

image:
  repository: ghcr.io/pando85/echo-operator
  tag: 0.0.0
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred

replicas: 3

rbac:
  create: true

serviceAccount:
  create: true
  name: "echo-operator-foo"
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/eksctl-eks-cluster-nodegroup-ng-NodeInstanceRole-1GZJ"

logging:
  level: "info,kube=debug,echo-operator=debug"

securityContext:
  fsGroup: 65534
  runAsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

containerPorts:
  metrics: 8080

readinessProbe:
  initialDelaySeconds: 0
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

tracing:
  enabled: true
  service: tempo
  namespace: monitoring
  port: 4317

env:
  - name: ECHO_OPERATOR_EXAMPLE
    value: "booo"

envFrom:
  - configMapRef:
      name: config-map-name
  - secretRef:
      name: secret-name

lifecycle:
  postStart:
    exec:
      command:
        - /bin/sh
        - -c
        - echo "Hello, Kubernetes!"
  preStop:
    exec:
      command:
        - /bin/sh
        - -c
        - echo "Goodbye, Kubernetes!"

deploymentAnnotations:
  deployment.kubernetes.io/revision: "1"

podAnnotations:
  foo/boo: "true"

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: echo-operator

nodeSelector:
  kubernetes.io/os: linux

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/e2e-az-name
              operator: In
              values:
                - e2e-az1
                - e2e-az2

tolerations:
  - key: "key"
    operator: "Equal"
    value: "value"
    effect: "NoSchedule"

dnsConfig:
  nameservers:
    - 1.2.3.4
  searches:
    - ns1.svc.cluster-domain.example
    - my.dns.search.suffix
  options:
    - name: ndots
      value: "2"
    - name: edns0

metrics:
  enabled: true
  service:
    annotations:
      foo/boo: "true"
    additionalLabels:
      foo/zoo: "suu"
    type: ClusterIP
    port: 8080
    portName: metrics
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: "30s"
    relabelings:
      - sourceLabels: [__meta_kubernetes_namespace]
        targetLabel: k8s_namespace
      - sourceLabels: [__meta_kubernetes_pod_name]
        targetLabel: k8s_pod
      - sourceLabels: [__meta_kubernetes_pod_container_name]
        targetLabel: k8s_container
    metricRelabelings:
      - sourceLabels: [__name__]
        targetLabel: name
      - sourceLabels: [job]
        targetLabel: job
    namespace: "monitoring"
    additionalLabels:
      release: monitoring
    annotations:
      foo/boo: "true"
    scheme: http
