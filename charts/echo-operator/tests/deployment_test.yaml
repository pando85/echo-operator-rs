# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: test deployment
templates:
  - templates/deployment.yaml
tests:
  - it: Render with default values and expected release
    release:
      name: echo-operator
      namespace: echo-operator
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: echo-operator
      - equal:
          path: spec.template.spec.serviceAccountName
          value: echo-operator
      - notExists:
          path: spec.template.spec.imagePullSecrets
      - equal:
          path: spec.template.spec.containers[0].name
          value: echo-operator
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 8080
              name: metrics
              protocol: TCP
      - exists:
          path: spec.template.spec..containers[0].env
      - equal:
          path: spec.template.spec.containers[0].readinessProbe
          value:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 3
      - notExists:
          path: spec.template.spec.containers[0].envFrom
      - notExists:
          path: spec.template.spec.containers[0].lifecycle
      - notExists:
          path: spec.template.spec.topologySpreadConstraints
      - notExists:
          path: spec.template.spec.nodeSelector
  - it: Render with default values random release
    asserts:
      - hasDocuments:
          count: 1
      - matchRegex:
          path: metadata.name
          pattern: ^.*-echo-operator$
  - it: Render with all values
    values:
      - values/all.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: echo-operator-test-full-name
      - exists:
          path: spec.template.spec.serviceAccountName
      - exists:
          path: spec.template.spec.imagePullSecrets
      - equal:
          path: spec.template.spec.containers[0].name
          value: echo-operator-test
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 8080
              name: metrics
              protocol: TCP
      - exists:
          path: spec.template.spec..containers[0].env
      - equal:
          path: spec.template.spec.containers[0].readinessProbe
          value:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 3
      - exists:
          path: spec.template.spec.containers[0].envFrom
      - exists:
          path: spec.template.spec.containers[0].lifecycle
      - exists:
          path: spec.template.spec.topologySpreadConstraints
      - exists:
          path: spec.template.spec.nodeSelector
