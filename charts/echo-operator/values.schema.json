{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "Echo-operator Helm Chart Values Schema",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "nameOverride": {
      "type": "string",
      "description": "Provide a name in place of `echo-operator`."
    },
    "fullnameOverride": {
      "type": "string",
      "description": "String to fully override `echo-operator.fullname`."
    },
    "additionalLabels": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "type": "integer",
      "format": "int32",
      "description": "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
    },
    "image": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "repository": {
          "type": "string",
          "description": "Image repository."
        },
        "tag": {
          "type": "string",
          "description": "Image tag."
        },
        "pullPolicy": {
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ],
          "description": "Image pull policy."
        }
      }
    },
    "imagePullSecrets": {
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "type": "array",
      "x-kubernetes-list-map-keys": [
        "name"
      ],
      "x-kubernetes-list-type": "map",
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    },
    "replicas": {
      "type": "integer",
      "format": "int32",
      "description": "Number of replicas."
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Whether to create RBAC resources."
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Whether to create a service account."
        },
        "name": {
          "type": "string",
          "description": "Service account name."
        },
        "annotations": {
          "type": "object",
          "description": "Service account annotations."
        }
      }
    },
    "logging": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "level": {
          "type": "string",
          "description": "Log level defined by RUST_LOG environment variable."
        }
      }
    },
    "securityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext",
      "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field."
    },
    "containerSecurityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext",
      "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
    },
    "containerPorts": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "readinessProbe": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
    },
    "livenessProbe": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
    },
    "tracing": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "service": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "env": {
      "description": "List of environment variables to set in the container. Cannot be updated.",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.EnvVar"
      },
      "type": "array",
      "x-kubernetes-list-map-keys": [
        "name"
      ],
      "x-kubernetes-list-type": "map",
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    },
    "envFrom": {
      "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.EnvFromSource"
      },
      "type": "array",
      "x-kubernetes-list-type": "atomic"
    },
    "lifecycle": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.Lifecycle",
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted"
    },
    "deploymentAnnotations": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
      "type": "object"
    },
    "resources": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements",
      "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
    },
    "topologySpreadConstraints": {
      "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
      },
      "type": "array",
      "x-kubernetes-list-map-keys": [
        "topologyKey",
        "whenUnsatisfiable"
      ],
      "x-kubernetes-list-type": "map",
      "x-kubernetes-patch-merge-key": "topologyKey",
      "x-kubernetes-patch-strategy": "merge"
    },
    "nodeSelector": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "tolerations": {
      "description": "If specified, the pod's tolerations.",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration"
      },
      "type": "array"
    },
    "affinity": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity",
      "description": "If specified, the pod's scheduling constraints"
    },
    "dnsConfig": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.30.5/_definitions.json#/definitions/io.k8s.api.core.v1.PodDNSConfig",
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy."
    },
    "metrics": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "service": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "type": "object"
            },
            "additionalLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "type": "object"
            },
            "type": {
              "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
              "type": "string"
            },
            "port": {
              "type": "integer"
            },
            "portName": {
              "type": "string"
            }
          }
        },
        "serviceMonitor": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "interval": {
              "type": "string"
            },
            "scrapeTimeout": {
              "type": "string"
            },
            "relabelings": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "metricRelabelings": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "namespace": {
              "type": "string"
            },
            "additionalLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "type": "object"
            },
            "scheme": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
